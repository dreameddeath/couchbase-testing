/*
 * Copyright Christophe Jeunesse
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${service.packageName};

import javax.annotation.Generated;

import com.dreameddeath.core.service.annotation.ServiceDef;
import com.dreameddeath.couchbase.core.process.remote.service.AbstractRemoteJobRestService;
import com.dreameddeath.couchbase.core.process.remote.model.rest.RemoteJobResultWrapper;


import ${service.job.importName};
import ${service.request.importName};
import ${service.response.importName};

import javax.ws.rs.Path;

@Generated(
    value = "${generator.name}",
    date = "${generator.date}",
    comments = "${generator.comment}"
)

@ServiceDef(domain = "${service.domain}",name="${service.name}",version = "${service.version}")
@Path("${service.path}")
public class ${service.className} extends AbstractRemoteJobRestService<${service.job.shortName},${service.request.shortName},${service.response.shortName}> {
    @Override
    protected ${service.job.shortName} buildJobFromRequest(${service.request.shortName} request) {
        ${service.job.shortName} resultJob = new ${service.job.shortName}();
#foreach($requestField in ${service.request.fields})
        resultJob.${service.job.buildSetter($requestField,$requestField.buildGetter("request"))};
#end
        return resultJob;
    }

    @Override
    protected ${service.response.shortName} buildResponse(${service.job.shortName} job) {
        ${service.response.shortName} resultResponse = new ${service.response.shortName}();
#foreach($responseField in ${service.response.fields})
        resultResponse.${responseField.setterName}($service.job.buildGetter("job",$responseField));
#end
        return resultResponse;
    }

    public static class WrappedResponse extends RemoteJobResultWrapper<${service.response.shortName}> {
        public WrappedResponse(${service.response.shortName} result) {
            super(result);
        }
    }

    @Override
    protected final Class<WrappedResponse> getResponseClass(){
        return WrappedResponse.class;
    }
}