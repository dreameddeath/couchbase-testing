<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright Christophe Jeunesse
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
            http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

    <context:annotation-config/>

    <bean id="propertySources" class="org.springframework.web.context.support.ServletContextAttributeFactoryBean">
        <property name="attributeName" value="propertySources" />
    </bean>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="propertySources" ref="propertySources" />
    </bean>

    <bean id="serviceDiscovererManager" class="org.springframework.web.context.support.ServletContextAttributeFactoryBean">
        <property name="attributeName" value="serviceDiscovererManager" />
    </bean>

    <bean id="curatorClient" class="org.springframework.web.context.support.ServletContextAttributeFactoryBean">
        <property name="attributeName" value="globalCuratorClient" />
    </bean>

    <bean id="daoDiscovery" class="com.dreameddeath.core.dao.discovery.DaoDiscovery">
        <constructor-arg ref="curatorClient" />
    </bean>

    <bean id="adminDaemonDiscovery"
          factory-bean="serviceDiscovererManager"
          factory-method="getServiceDiscoverer" init-method="start">
        <constructor-arg type="java.lang.String" value="${daemon.admin.services.domain}" />
    </bean>

    <bean id="daemonAdminClientFactory" class=" com.dreameddeath.core.service.client.ServiceClientFactory">
        <constructor-arg type="com.dreameddeath.core.service.discovery.ServiceDiscoverer" ref="adminDaemonDiscovery" />
    </bean>

    <bean id="daemonDiscoverer" class="com.dreameddeath.infrastructure.daemon.discovery.DaemonDiscovery">
        <constructor-arg ref="curatorClient"/>
    </bean>

    <bean id="configCuratorDiscovery" class="com.dreameddeath.core.curator.config.ConfigCuratorDiscovery">
        <constructor-arg ref="curatorClient"/>
        <constructor-arg value="${curator.config.shared.root.path}"/>
    </bean>

    <jaxrs:server id="apps-admin" transportId="http://cxf.apache.org/transports/http" address="/apps-admin" >
        <jaxrs:serviceBeans>
            <bean id="daemons" class="com.dreameddeath.infrastructure.daemon.services.RestDaemonsDiscoveryAndAdminService">
                <property name="daemonDiscovery" ref="daemonDiscoverer" />
                <property name="clientFactory" ref="daemonAdminClientFactory"/>
            </bean>
            <bean id="daos" class="com.dreameddeath.core.dao.discovery.DaoDiscoveryRestService">
            </bean>
            <bean id="config-shared" class="com.dreameddeath.core.service.config.SharedConfigManagementService">
            </bean>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.dreameddeath.core.json.JsonProviderFactory" factory-method="getProvider">
                <constructor-arg value="service" />
            </bean>
        </jaxrs:providers>
    </jaxrs:server>
</beans>